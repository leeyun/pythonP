"""
    Unit 24 [문자열 응용]
    1. 문자열 바꾸기
    + 변수 = 변수.replace('바꿀 문자열', '새문자열)
        문자열 자체는 바뀌지 않고 반환만 함 즉, 재할당 해야함

    2. 문자 바꾸기
    '
        table = str.maketrens('aeiou', '12345')
        'apple'.translate(table)
    '
        바꿀 문자를 변환 테이블에 저장 후 translate로 바꿀 수 있다.

    3. 문자열 분리
    + '문자열'.split('기준문자열')

    4. 구분자 문자열과 문자열 리스트 연결
    + '구분자'.join(문자열리스트)

    5. 대문자 소문자 변경
    + '문자열'.upper()
        모든 문자 대문자롭 변경
    + '문자열'.lower()
        모든 문자 소문자로 변경

    6. 공백 삭제
    + '문자열'.lstrip()
        왼쪽 공백 삭제
    + '문자열'.rstrip()
        오른쪽 공백 삭제
    + '문자열'.strip()
        양쪽 공백 삭제

    7. 특정 문자 삭제
    + '문자열'.lstrip('삭제할 문자들')
        왼쪽 특정 문자 삭제
    + '문자열'.rstrip('삭제할 문자들')
        오른쪽 특정 문자 삭제
    + '문자열'.strip('삭제할 문자들')
        양쪽 특정 문자 삭제

    8. 문자열 정렬
    + '문자열'.ljust(문자열 길이지정)
        문자열 길이 설정 후 왼쪽 정렬
    + '문자열'.rjust(문자열 길이지정)
        문자열 길이 설정 후 오른쪽 정렬
    + '문자열'.center(문자열 길이지정)
        문자열 길이 설정 후 가운데 정렬(남은 공간이 홀수 일 경우 왼쪽이 공백이 한칸 더 들어감)

    9.메서드 체이닝
    + 메서드를 줄줄이 연결하여 호출하는 것을 의미
        '문자열'.rjust(10).upper()

    10. 문자열 왼쪽에 0 채우기
    + '문자열'.zfill(문자열길이)

    11. 문자열 위치 찾기
    + '문자열'.find('찾을 문자열')
        찾을 문자열의 첫번째 인덱스를 반환 없을 경우 -1 반환
    + '문자열'.rfind('찾을 문자열')
        오른쪽에서부터 특정 문자열을 찾아서 인덱스 반환 없을 경우 -1 반환
    + '문자열'.index('찾을 문자열')
        찾을 문자열의 첫번째 인덱스를 반환 없을 경우 에러
    + '문자열'.rindex('찾을 문자열')
        오른쪽에서부터 특정 문자열을 찾아서 인덱스 반환 없을 경우 에러

    12. 문자열 갯수세기
    + '문자열'.count('셀 문자 또는 문자열')

    13. 문자열 서식 지정자
    + '%s' %'문자열'
        문자열 서식 지정자
    + '%d' %숫자
        숫자 서식 지정자
    + '%f' %숫자
        소수점 서식 지정자(기본 소수점이하 6자리)
    + '%.자릿수f' %숫자
        소수점 이하 자릿수를 지정
    + '%길이s' %'문자열'
        지정된 길이로 만든 뒤 오른쪽으로 정렬 후 남은 공간 공백 지정
    + '%-길이s' %'문자열'
        지정된 길이로 만든 뒤 왼쪽으로 정렬 후 남은 공간 공백 지정
    + 여러개 서식 문자열
        '
            'Today is %d %s' %(3, 'April)
        '

    14. 포맷팅
    1) .format
    2) .foramt + 변수 지정
    3) f'

    15. format 메서드로 문자열 정렬
    + '{인덱스:<길이}'.foramt('값)
        인덱스를 기준으로 길이 만큼 왼쪽 정렬
    + '{인덱스:>길이}'.foramt(값)
        인덱스를 기준으로 길이 만큼 오른쪽 정렬

    16. 채우기와 정렬 조합
    + {인덱스:'채울문자열'>길이}.foramt(값)
"""

# 연습문제: 파일 경로에서 파일명만 가져오기
path = 'C:\\Users\\dojang\\AppData\\Local\\Programs\\Python\\Python36-32\\python.exe'
i = path.rfind('\\')
filename = path[i+1:]
print(filename)

# 심사문제: 특정 단어 개수 세기
S = input()
print(S)
first = 0
last = 0
cnt = 0
while last != -1:
    last = S.find(' ' or ',' or '.', first)
    if S[first:last] == 'the':
        cnt += 1
    elif S[first:last] == 'the,':
        cnt += 1
    elif S[first:last] == 'the.':
        cnt += 1
    first = last + 1
print(cnt)

# 심사문제: 높은 가격순으로 출력하기
Products = list(map(int, input().split(';')))
Products.sort(reverse=True)
for product in Products:
    print('%9s' % format(product, ','))








